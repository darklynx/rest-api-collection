{
  "swagger" : "2.0",
  "info" : {
    "description" : "RESTful API for Instagram services.",
    "version" : "1.0.0",
    "title" : "Instagram API",
    "termsOfService" : "https://instagram.com/about/legal/terms/api/",
    "contact" : {
      "name" : "Instagram",
      "url" : "https://instagram.com/developer"
    }
  },
  "host" : "api.instagram.com",
  "basePath" : "/v1",
  "tags" : [ {
    "name" : "users",
    "description" : "Get information about users"
  }, {
    "name" : "relationships",
    "description" : "Relationships to other users outgoing and incoming"
  }, {
    "name" : "media",
    "description" : "Get information about media"
  }, {
    "name" : "comments",
    "description" : "Manage comments"
  }, {
    "name" : "likes",
    "description" : "Manage likes"
  }, {
    "name" : "tags",
    "description" : "Get information about tags"
  }, {
    "name" : "locations",
    "description" : "Get information about locations"
  }, {
    "name" : "geographies",
    "description" : "Get geographies"
  } ],
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/users/{user-id}" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Get basic information about a user.",
        "description" : "Get basic information about a user. To get information about the owner of the access token, you can use\n**self** instead of the user-id.\n",
        "parameters" : [ {
          "name" : "user-id",
          "in" : "path",
          "description" : "The ID of a user to get information about, or **self** to retrieve information about authenticated user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "User basic information.",
            "schema" : {
              "$ref" : "#/definitions/UserResponse"
            }
          },
          "404" : {
            "description" : "Not Found, user with such ID does not exist."
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic" ]
        } ]
      }
    },
    "/users/self/feed" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "See the authenticated user's feed.",
        "description" : "See the authenticated user's feed.",
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "Count of media to return.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "min_id",
          "in" : "query",
          "description" : "Return media later than this min_id.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "max_id",
          "in" : "query",
          "description" : "Return media earlier than this max_id.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Users feed entries.",
            "schema" : {
              "$ref" : "#/definitions/MediaResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic" ]
        } ]
      }
    },
    "/users/{user-id}/media/recent" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Get the most recent media published by a user.",
        "description" : "Get the most recent media published by a user. To get the most recent media published by the owner of the\naccess token, you can use **self** instead of the user-id.\n",
        "parameters" : [ {
          "name" : "user-id",
          "in" : "path",
          "description" : "The ID of a user to get recent media of, or **self** to retrieve media of authenticated user.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Count of media to return.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "max_timestamp",
          "in" : "query",
          "description" : "Return media before this UNIX timestamp.",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "min_timestamp",
          "in" : "query",
          "description" : "Return media after this UNIX timestamp.",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "min_id",
          "in" : "query",
          "description" : "Return media later than this min_id.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "max_id",
          "in" : "query",
          "description" : "Return media earlier than this max_id.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Users media entries.",
            "schema" : {
              "$ref" : "#/definitions/MediaResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic" ]
        } ]
      }
    },
    "/users/self/media/liked" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "See the list of media liked by the authenticated user.",
        "description" : "See the list of media liked by the authenticated user. Private media is returned as long as the authenticated\nuser has permission to view that media. Liked media lists are only available for the currently authenticated\nuser.\n",
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "Count of media to return.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "max_like_id",
          "in" : "query",
          "description" : "Return media liked before this id.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Users media entries.",
            "schema" : {
              "$ref" : "#/definitions/MediaResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic" ]
        } ]
      }
    },
    "/users/search" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Search for a user by name.",
        "description" : "Search for a user by name.",
        "parameters" : [ {
          "name" : "q",
          "in" : "query",
          "description" : "A query string.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Number of users to return.",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of found users.",
            "schema" : {
              "$ref" : "#/definitions/UsersInfoResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic" ]
        } ]
      }
    },
    "/users/{user-id}/follows" : {
      "get" : {
        "tags" : [ "relationships" ],
        "summary" : "Get the list of users this user follows.",
        "description" : "Get the list of users this user follows. To get follows of the owner of the access token, you can use **self**\ninstead of the user-id.\n",
        "parameters" : [ {
          "name" : "user-id",
          "in" : "path",
          "description" : "The ID of a user, or **self** to retrieve information about authenticated user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of users this user follows.",
            "schema" : {
              "$ref" : "#/definitions/UsersPagingResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic" ]
        } ]
      }
    },
    "/users/{user-id}/followed-by" : {
      "get" : {
        "tags" : [ "relationships" ],
        "summary" : "Get the list of users this user is followed by.",
        "description" : "Get the list of users this user is followed by. To get users followed by the owner of the access token, you\ncan use **self** instead of the user-id.\n",
        "parameters" : [ {
          "name" : "user-id",
          "in" : "path",
          "description" : "The ID of a user, or **self** to retrieve information about authenticated user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of users this user is followed by.",
            "schema" : {
              "$ref" : "#/definitions/UsersPagingResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic" ]
        } ]
      }
    },
    "/users/self/requested-by" : {
      "get" : {
        "tags" : [ "relationships" ],
        "summary" : "List the users who have requested this user's permission to follow.",
        "description" : "List the users who have requested this user's permission to follow.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "List of users who have requested this user's permission to follow.",
            "schema" : {
              "$ref" : "#/definitions/UsersInfoResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic" ]
        } ]
      }
    },
    "/users/{user-id}/relationship" : {
      "get" : {
        "tags" : [ "relationships" ],
        "summary" : "Get information about a relationship to another user.",
        "description" : "Get information about a relationship to another user.",
        "parameters" : [ {
          "name" : "user-id",
          "in" : "path",
          "description" : "The ID of a user to get information about.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Relationship information.",
            "schema" : {
              "$ref" : "#/definitions/RelationshipResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic" ]
        } ]
      },
      "post" : {
        "tags" : [ "relationships" ],
        "summary" : "Modify the relationship between the current user and the target user.",
        "description" : "Modify the relationship between the current user and the target user.",
        "parameters" : [ {
          "name" : "user-id",
          "in" : "path",
          "description" : "The ID of the target user.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "action",
          "in" : "query",
          "description" : "Type of action to apply for relationship with the user.",
          "required" : true,
          "type" : "string",
          "enum" : [ "follow", "unfollow", "block", "unblock", "approve", "ignore" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Relationship information.",
            "schema" : {
              "$ref" : "#/definitions/RelationshipPostResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic", "relationships" ]
        } ]
      }
    },
    "/media/{media-id}" : {
      "get" : {
        "tags" : [ "media" ],
        "summary" : "Get information about a media object.",
        "description" : "Get information about a media object. The returned type key will allow you to differentiate between image and\nvideo media.\n\nNote: if you authenticate with an OAuth Token, you will receive the user_has_liked key which quickly tells you\nwhether the current user has liked this media item.\n",
        "parameters" : [ {
          "name" : "media-id",
          "in" : "path",
          "description" : "The ID of the media resource.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Media resource information.",
            "schema" : {
              "$ref" : "#/definitions/MediaResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic" ]
        } ]
      }
    },
    "/media/shortcode/{shortcode}" : {
      "get" : {
        "tags" : [ "media" ],
        "summary" : "Get information about a media object.",
        "description" : "This endpoint returns the same response as `GET /media/{media-id}`.\n\nA media object's shortcode can be found in its shortlink URL. An example shortlink is\n`http://instagram.com/p/D/`, its corresponding shortcode is `D`.\n",
        "parameters" : [ {
          "name" : "shortcode",
          "in" : "path",
          "description" : "The short code of the media resource.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Media resource information.",
            "schema" : {
              "$ref" : "#/definitions/MediaResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic" ]
        } ]
      }
    },
    "/media/search" : {
      "get" : {
        "tags" : [ "media" ],
        "summary" : "Search for media in a given area.",
        "description" : "Search for media in a given area. The default time span is set to 5 days. The time span must not exceed 7 days.\nDefaults time stamps cover the last 5 days. Can return mix of `image` and `video` types.\n",
        "parameters" : [ {
          "name" : "lat",
          "in" : "query",
          "description" : "Latitude of the center search coordinate. If used, `lng` is required.",
          "required" : true,
          "type" : "number",
          "format" : "double"
        }, {
          "name" : "lng",
          "in" : "query",
          "description" : "Longitude of the center search coordinate. If used, `lat` is required.",
          "required" : true,
          "type" : "number",
          "format" : "double"
        }, {
          "name" : "min_timestamp",
          "in" : "query",
          "description" : "A unix timestamp. All media returned will be taken later than this timestamp.",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "max_timestamp",
          "in" : "query",
          "description" : "A unix timestamp. All media returned will be taken earlier than this timestamp.",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "distance",
          "in" : "query",
          "description" : "Default is 1km (distance=1000), max distance is 5km.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Found media resources (without likes information) in a given area.",
            "schema" : {
              "$ref" : "#/definitions/MediaSearchResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic" ]
        } ]
      }
    },
    "/media/popular" : {
      "get" : {
        "tags" : [ "media" ],
        "summary" : "Get a list of currently popular media.",
        "description" : "Get a list of what media is most popular at the moment. Can return mix of `image` and `video` types.\n\nNote: this endpoint does not work at the moment and returns HTTP 404\n",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Found media resources (without likes information).",
            "schema" : {
              "$ref" : "#/definitions/MediaSearchResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic" ]
        } ]
      }
    },
    "/media/{media-id}/comments" : {
      "get" : {
        "tags" : [ "comments" ],
        "summary" : "Get a list of recent comments on a media object.",
        "description" : "Get a list of recent comments on a media object.",
        "parameters" : [ {
          "name" : "media-id",
          "in" : "path",
          "description" : "The ID of the media resource.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of comments of the media resource.",
            "schema" : {
              "$ref" : "#/definitions/CommentsResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic" ]
        } ]
      },
      "post" : {
        "tags" : [ "comments" ],
        "summary" : "Create a comment on a media object.",
        "description" : "Create a comment on a media object with the following rules:\n\n  * The total length of the comment cannot exceed 300 characters.\n  * The comment cannot contain more than 4 hashtags.\n  * The comment cannot contain more than 1 URL.\n  * The comment cannot consist of all capital letters.\n",
        "parameters" : [ {
          "name" : "media-id",
          "in" : "path",
          "description" : "The ID of the media resource.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "text",
          "in" : "query",
          "description" : "Text to post as a comment on the media object as specified in `media-id`.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Result of posting a comment.",
            "schema" : {
              "$ref" : "#/definitions/StatusResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic", "comments" ]
        } ]
      }
    },
    "/media/{media-id}/comments/{comment-id}" : {
      "delete" : {
        "tags" : [ "comments" ],
        "summary" : "Remove a comment.",
        "description" : "Remove a comment either on the authenticated user's media object or authored by the authenticated user.\n",
        "parameters" : [ {
          "name" : "media-id",
          "in" : "path",
          "description" : "The ID of the media resource.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "comment-id",
          "in" : "path",
          "description" : "The ID of the comment entry.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Result of deleting a comment.",
            "schema" : {
              "$ref" : "#/definitions/StatusResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic", "comments" ]
        } ]
      }
    },
    "/media/{media-id}/likes" : {
      "get" : {
        "tags" : [ "likes" ],
        "summary" : "Get a list of users who have liked this media.",
        "description" : "Get a list of users who have liked this media.",
        "parameters" : [ {
          "name" : "media-id",
          "in" : "path",
          "description" : "The ID of the media resource.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of users who liked the media resource.",
            "schema" : {
              "$ref" : "#/definitions/UsersInfoResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic" ]
        } ]
      },
      "post" : {
        "tags" : [ "likes" ],
        "summary" : "Set a like on this media by the current user.",
        "description" : "Set a like on this media by the currently authenticated user.",
        "parameters" : [ {
          "name" : "media-id",
          "in" : "path",
          "description" : "The ID of the media resource.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Result of setting a like.",
            "schema" : {
              "$ref" : "#/definitions/StatusResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic", "likes" ]
        } ]
      },
      "delete" : {
        "tags" : [ "likes" ],
        "summary" : "Remove a like on this media by the current user.",
        "description" : "Remove a like on this media by the currently authenticated user.",
        "parameters" : [ {
          "name" : "media-id",
          "in" : "path",
          "description" : "The ID of the media resource.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Result of removing a like.",
            "schema" : {
              "$ref" : "#/definitions/StatusResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "instagram_auth" : [ "basic", "likes" ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "api_key" : {
      "type" : "apiKey",
      "name" : "access_token",
      "in" : "query"
    },
    "instagram_auth" : {
      "type" : "oauth2",
      "authorizationUrl" : "https://instagram.com/oauth/authorize/",
      "flow" : "implicit",
      "scopes" : {
        "basic" : "to read data on a user's behalf, e.g. recent media, following lists (granted by default)",
        "comments" : "to create or delete comments on a user's behalf",
        "relationships" : "to follow and unfollow accounts on a user's behalf",
        "likes" : "to like and unlike media on a user's behalf"
      }
    }
  },
  "definitions" : {
    "MetaData" : {
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "HTTP result code"
        }
      }
    },
    "PaginationIdInfo" : {
      "properties" : {
        "next_url" : {
          "type" : "string",
          "description" : "URL to retrieve next page of entries"
        },
        "next_max_id" : {
          "type" : "string",
          "description" : "The max ID of the next page"
        }
      }
    },
    "PaginationCursorInfo" : {
      "properties" : {
        "next_url" : {
          "type" : "string",
          "description" : "URL to retrieve next page of entries"
        },
        "next_cursor" : {
          "type" : "string",
          "description" : "The cursor ID of the next page"
        }
      }
    },
    "UserResponse" : {
      "properties" : {
        "meta" : {
          "description" : "Response meta-data",
          "$ref" : "#/definitions/MetaData"
        },
        "data" : {
          "description" : "User basic information",
          "$ref" : "#/definitions/UserInfo"
        }
      }
    },
    "UserInfo" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "User ID"
        },
        "username" : {
          "type" : "string",
          "description" : "User name, nickname"
        },
        "bio" : {
          "type" : "string",
          "description" : "User biography"
        },
        "website" : {
          "type" : "string",
          "description" : "URL to user web-site"
        },
        "profile_picture" : {
          "type" : "string",
          "description" : "URL to user profile picture"
        },
        "full_name" : {
          "type" : "string",
          "description" : "User full name"
        },
        "counts" : {
          "description" : "User statistics (counters)",
          "$ref" : "#/definitions/UserCounts"
        }
      }
    },
    "UserCounts" : {
      "properties" : {
        "media" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of user media"
        },
        "follows" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of users followed by this user"
        },
        "followed_by" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of followers of this user"
        }
      }
    },
    "UsersInfoResponse" : {
      "properties" : {
        "meta" : {
          "description" : "Response meta-data",
          "$ref" : "#/definitions/MetaData"
        },
        "data" : {
          "type" : "array",
          "description" : "User short information entries",
          "items" : {
            "$ref" : "#/definitions/UserShortInfo"
          }
        }
      }
    },
    "UsersPagingResponse" : {
      "properties" : {
        "pagination" : {
          "description" : "Information for pagination",
          "$ref" : "#/definitions/PaginationCursorInfo"
        },
        "meta" : {
          "description" : "Response meta-data",
          "$ref" : "#/definitions/MetaData"
        },
        "data" : {
          "type" : "array",
          "description" : "List of user short information entries",
          "items" : {
            "$ref" : "#/definitions/UserShortInfo"
          }
        }
      }
    },
    "UserShortInfo" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "User ID"
        },
        "username" : {
          "type" : "string",
          "description" : "User name, nickname"
        },
        "profile_picture" : {
          "type" : "string",
          "description" : "URL to user profile picture"
        },
        "full_name" : {
          "type" : "string",
          "description" : "User full name"
        }
      }
    },
    "MediaResponse" : {
      "properties" : {
        "meta" : {
          "description" : "Response meta-data",
          "$ref" : "#/definitions/MetaData"
        },
        "data" : {
          "description" : "Media resource information",
          "$ref" : "#/definitions/MediaEntry"
        }
      }
    },
    "MediaSearchResponse" : {
      "properties" : {
        "meta" : {
          "description" : "Response meta-data",
          "$ref" : "#/definitions/MetaData"
        },
        "data" : {
          "type" : "array",
          "description" : "Found media entries (without likes information)",
          "items" : {
            "$ref" : "#/definitions/MediaEntry"
          }
        }
      }
    },
    "MediaEntry" : {
      "properties" : {
        "attribution" : {
          "type" : "string",
          "description" : "??? Unknown ???"
        },
        "id" : {
          "type" : "string",
          "description" : "ID of a media entry"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of this media entry",
          "enum" : [ "image", "video" ]
        },
        "tags" : {
          "type" : "array",
          "description" : "List of tags assigned to this media",
          "items" : {
            "type" : "string"
          }
        },
        "location" : {
          "description" : "Location data for this media if available",
          "$ref" : "#/definitions/LocationInfo"
        },
        "comments" : {
          "description" : "Comments of this media entry",
          "$ref" : "#/definitions/CommentsCollection"
        },
        "filter" : {
          "type" : "string",
          "description" : "Filter of this media entry"
        },
        "created_time" : {
          "type" : "string",
          "description" : "Media creation UNIX timestamp"
        },
        "link" : {
          "type" : "string",
          "description" : "Fixed URL of this media entry"
        },
        "likes" : {
          "description" : "Likes of this media entry",
          "$ref" : "#/definitions/LikesCollection"
        },
        "images" : {
          "description" : "Images data in different resolutions",
          "$ref" : "#/definitions/ImagesData"
        },
        "videos" : {
          "description" : "Videos data in different resolutions, applied for 'video' type",
          "$ref" : "#/definitions/VideosData"
        },
        "users_in_photo" : {
          "type" : "array",
          "description" : "Users located on this media entry",
          "items" : {
            "$ref" : "#/definitions/UserInPhoto"
          }
        },
        "caption" : {
          "description" : "Describes caption of this media",
          "$ref" : "#/definitions/CaptionData"
        },
        "user_has_liked" : {
          "type" : "boolean",
          "description" : "Indicates whether authenticated user has liked this media or not"
        },
        "user" : {
          "description" : "User who posted this media",
          "$ref" : "#/definitions/UserShortInfo"
        }
      }
    },
    "LocationInfo" : {
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "ID of this location"
        },
        "latitude" : {
          "type" : "number",
          "format" : "double",
          "description" : "Location latitude"
        },
        "longitude" : {
          "type" : "number",
          "format" : "double",
          "description" : "Location longitude"
        },
        "name" : {
          "type" : "string",
          "description" : "Location name"
        }
      }
    },
    "CommentsCollection" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Nember of comments available, data does not necessary contain all comments"
        },
        "data" : {
          "type" : "array",
          "description" : "Collection of comment entries",
          "items" : {
            "$ref" : "#/definitions/CommentEntry"
          }
        }
      }
    },
    "CommentEntry" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "ID of this comment"
        },
        "created_time" : {
          "type" : "string",
          "description" : "Comment creation UNIX timestamp"
        },
        "text" : {
          "type" : "string",
          "description" : "Text of the comment"
        },
        "from" : {
          "description" : "User who posted this comment",
          "$ref" : "#/definitions/UserShortInfo"
        }
      }
    },
    "LikesCollection" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Nember of likes available, data does not necessary contain all comments"
        },
        "data" : {
          "type" : "array",
          "description" : "Collection of users who liked",
          "items" : {
            "$ref" : "#/definitions/UserShortInfo"
          }
        }
      }
    },
    "ImagesData" : {
      "properties" : {
        "low_resolution" : {
          "description" : "Image in low resolution",
          "$ref" : "#/definitions/ImageInfo"
        },
        "thumbnail" : {
          "description" : "Thumbnail of the image",
          "$ref" : "#/definitions/ImageInfo"
        },
        "standard_resolution" : {
          "description" : "Image in standard resolution",
          "$ref" : "#/definitions/ImageInfo"
        }
      }
    },
    "VideosData" : {
      "properties" : {
        "low_resolution" : {
          "description" : "Video in low resolution",
          "$ref" : "#/definitions/ImageInfo"
        },
        "standard_resolution" : {
          "description" : "Video in standard resolution",
          "$ref" : "#/definitions/ImageInfo"
        }
      }
    },
    "ImageInfo" : {
      "properties" : {
        "url" : {
          "type" : "string",
          "description" : "URL of the image/video resource"
        },
        "width" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Image/video width in pixels"
        },
        "height" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Image/video height in pixels"
        }
      }
    },
    "UserInPhoto" : {
      "properties" : {
        "position" : {
          "description" : "Position in photo",
          "$ref" : "#/definitions/Position"
        },
        "user" : {
          "description" : "User who is indicated on the photo",
          "$ref" : "#/definitions/UserShortInfo"
        }
      }
    },
    "Position" : {
      "properties" : {
        "x" : {
          "type" : "number",
          "format" : "float",
          "description" : "X position (horizontal)"
        },
        "y" : {
          "type" : "number",
          "format" : "float",
          "description" : "Y position (vertical)"
        }
      }
    },
    "CaptionData" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "ID of this caption"
        },
        "created_time" : {
          "type" : "string",
          "description" : "Caption creation UNIX timestamp"
        },
        "text" : {
          "type" : "string",
          "description" : "Caption text"
        },
        "from" : {
          "description" : "User who created this caption",
          "$ref" : "#/definitions/UserShortInfo"
        }
      }
    },
    "RelationshipResponse" : {
      "properties" : {
        "meta" : {
          "description" : "Response meta-data",
          "$ref" : "#/definitions/MetaData"
        },
        "data" : {
          "description" : "Relationship information",
          "$ref" : "#/definitions/RelationshipInfo"
        }
      }
    },
    "RelationshipInfo" : {
      "properties" : {
        "outgoing_status" : {
          "type" : "string",
          "description" : "Status of outgoing relationship",
          "enum" : [ "none", "follows", "requested" ]
        },
        "incoming_status" : {
          "type" : "string",
          "description" : "Status of incoming relationship",
          "enum" : [ "none", "followed_by", "requested_by" ]
        },
        "target_user_is_private" : {
          "type" : "boolean",
          "description" : "Indicates whether target user is private or not"
        }
      }
    },
    "RelationshipPostResponse" : {
      "properties" : {
        "meta" : {
          "description" : "Response meta-data",
          "$ref" : "#/definitions/MetaData"
        },
        "data" : {
          "description" : "Current relationship status",
          "$ref" : "#/definitions/RelationshipStatus"
        }
      }
    },
    "RelationshipStatus" : {
      "properties" : {
        "outgoing_status" : {
          "type" : "string",
          "description" : "Status of outgoing relationship",
          "enum" : [ "none", "follows", "requested" ]
        }
      }
    },
    "CommentsResponse" : {
      "properties" : {
        "meta" : {
          "description" : "Response meta-data",
          "$ref" : "#/definitions/MetaData"
        },
        "data" : {
          "type" : "array",
          "description" : "Collection of comments",
          "items" : {
            "$ref" : "#/definitions/CommentEntry"
          }
        }
      }
    },
    "StatusResponse" : {
      "properties" : {
        "meta" : {
          "description" : "Response meta-data",
          "$ref" : "#/definitions/MetaData"
        },
        "data" : {
          "type" : "string",
          "description" : "No data - 'null'"
        }
      }
    }
  }
}